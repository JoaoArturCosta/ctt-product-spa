version: "3.8"

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: build # Target the build stage for development
    volumes: # Mount volumes for development
      - ./src:/app/src
      - ./public:/app/public
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./webpack.config.js:/app/webpack.config.js # Mount webpack config
    ports:
      - "3000:3000" # Map host 3000 to container dev server port 3000
    environment:
      NODE_ENV: development # Set environment to development
      CHOKIDAR_USEPOLLING: "true" # Often needed for Docker volume hot-reloading
    # Override the default command (Nginx) to run the dev server
    # Ensure 'npm run dev' script exists in package.json and runs webpack-dev-server
    command: npm run dev
    depends_on:
      - mock_api # Ensure mock API starts before frontend attempts connection in some scenarios

  mock_api:
    image: node:20-alpine # Use updated node image
    working_dir: /app
    volumes:
      - ./mock-api:/app/mock-api # Mount mock-api directory
    # Command to install json-server globally (if not a dev dependency) and run it
    # If json-server is a dev dependency, adjust command: npx json-server ...
    command: >
      sh -c "npm install -g json-server && 
             json-server --watch mock-api/db.json --host 0.0.0.0 --port 3001"
    ports:
      - "3001:3001" # Expose mock API port

# Define networks if needed for specific communication patterns
# networks:
#   app-network:
#     driver: bridge
